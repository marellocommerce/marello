workflows:
    marello_allocate_workflow:
        entity: Marello\Bundle\InventoryBundle\Entity\Allocation
        entity_attribute: allocation

        defaults:
            active: true
        steps:
            pending:
                allowed_transitions:
                    - sent_to_warehouse
                    - reallocate
                    - resolved
                    - item_complete
            warehouse_notified:
                allowed_transitions:
                    - pick_and_pack
                    - rejected
            rejected_by_warehouse:
                is_final: true
            pick_and_pack:
                allowed_transitions:
                    - rejected
                    - complete
            resolved:
                is_final: true
            complete:
                is_final: true
            item_complete:
                is_final: true
        transitions:
            pending:
                step_to: pending
                is_start: true
                transition_definition: pending_definition
            sent_to_warehouse:
                is_unavailable_hidden: true
                step_to: warehouse_notified
                transition_definition: send_definition
            pick_and_pack:
                step_to: pick_and_pack
                transition_definition: pick_pack_definition
            rejected:
                step_to: rejected_by_warehouse
                transition_definition: rejected_definition
            resolved:
                is_unavailable_hidden: true
                step_to: resolved
                transition_definition: close_allocation_definition
            reallocate:
                step_to: resolved
                transition_definition: reallocate_definition
            complete:
                step_to: complete
                transition_definition: complete_definition
            item_complete:
                step_to: item_complete
                transition_definition: item_complete_definition
        transition_definitions:
            pending_definition:
                actions:
                    -  '@extendable':
                           conditions:
                               '@and':
                                   -   '@not_equal': [ $allocation.allocationContext.id, 'reshipment' ]
                           events: [ extendable_action.pending_transition_after ]
            send_definition:
                preconditions:
                    '@and':
                        - '@not_equal': [ $allocation.allocationContext.id, 'order_cash_and_carry']
                conditions:
                    '@and':
                        - '@not_empty': $allocation.warehouse
                        - '@not_empty': $allocation.warehouse.notifier
                preactions:
                    - '@flash_message':
                          conditions:
                              '@and':
                                  - '@not_empty': $allocation.warehouse
                                  - '@empty': $allocation.warehouse.notifier
                          message: 'No notification can be send, notification method is empty'
                          type: 'error'
                actions:
                    -  '@extendable':
                           events: [ extendable_action.send_transition_after ]
            close_allocation_definition:
                preconditions:
                    '@and':
                        - '@equal': [ $allocation.state.id, 'closed' ]
                        - '@equal': [ $allocation.status.id, 'closed' ]
            pick_pack_definition:
                actions:
                    - '@foreach':
                          array: $allocation.items
                          value: $.result.value
                          actions:
                              - '@assign_value': [$.result.value.quantityConfirmed, $.result.value.quantity]
                              - '@assign_value': [$.result.value.quantityRejected, 0]
            reallocate_definition:
                preconditions:
                    '@and':
                        - '@not_equal': [ $allocation.allocationContext.id, 'order_cash_and_carry']
                actions:
                    - '@foreach':
                          array: $allocation.items
                          value: $.result.value
                          actions:
                              - '@assign_value': [$.result.value.quantityConfirmed, 0]
                              - '@assign_value': [$.result.value.quantityRejected, $.result.value.quantity]
                    - '@call_service_method':
                          service: Marello\Bundle\InventoryBundle\Provider\InventoryAllocationProvider
                          method: allocateOrderToWarehouses
                          method_parameters: [ $allocation.order, $allocation ]
                    - '@request_enum_entity':
                        enum_code: marello_allocation_state
                        identifier: 'closed'
                        attribute: $allocation.state
                    - '@request_enum_entity':
                          enum_code: marello_allocation_status
                          identifier: 'closed'
                          attribute: $allocation.status
            complete_definition:
                actions:
                    - '@call_service_method':
                        service: Marello\Bundle\InventoryBundle\Factory\AllocationShippingContextFactory
                        method: create
                        method_parameters: [$allocation]
                        attribute: $.result.allocationShippingContext
                    - '@marello_shipment_create':
                        context: $.result.allocationShippingContext
                        method: $allocation.order.shippingMethod
                        methodType: $allocation.order.shippingMethodType
                    # parent allocation and children are empty, so we need to send email to customer with 'partial' shipped email
                    - '@marello_notification_send':
                        conditions:
                            '@and':
                                - '@not_empty': $allocation.order.customer.email
                                - '@empty': $allocation.parent
                                - '@no_elements': $allocation.children
                        entity: $allocation
                        recipient: $allocation.order.customer
                        template: marello_order_shipped_allocation_confirmation
                        additionalContexts: [$allocation.order]
                    # parent allocation is empty, so we need to send email to customer with 'full' shipped email
                    - '@marello_notification_send':
                        conditions:
                            '@and':
                                - '@not_empty': $allocation.order.customer.email
                                - '@empty': $allocation.parent
                                - '@has_elements': $allocation.children
                        entity: $allocation.order
                        recipient: $allocation.order.customer
                        template: marello_order_shipped_confirmation
                        additionalContexts: [$allocation.order]
                    # parent allocation is not empty, so we need to send email to parent allocation warehouse to inform
                    # them a shipment is underway.
                    - '@marello_notification_send':
                        conditions:
                            '@and':
                                - '@not_empty': $allocation.parent.warehouse.email
                                - '@not_empty': $allocation.parent
                        entity: $allocation
                        recipient: $allocation.parent.warehouse
                        template: marello_warehouse_allocation
                        additionalContexts: [$allocation.order]
                    - '@tree':
                        actions:
                            - '@foreach':
                                array: $allocation.items
                                value: $.result.value
                                actions:
                                    - '@call_service_method':
                                          service: marello_inventory.model.inventory_level_totals_calculator
                                          method: getTotalAllocationQtyConfirmed
                                          method_parameters: [$.result.value]
                                          attribute: $.result.totalQtyConfirmed
                                    - '@tree':
                                        conditions:
                                            '@equal': [$.result.totalQtyConfirmed, $.result.value.orderItem.quantity]
                                        actions:
                                            - '@request_enum_entity':
                                                enum_code: marello_item_status
                                                identifier: 'complete'
                                                attribute: $.result.value.orderItem.status
                    - '@extendable':
                          events: [extendable_action.create_packingslip]
                    -   '@extendable':
                            events: [ extendable_action.allocation_complete ]
            item_complete_definition:
                preconditions:
                    '@and':
                        - '@equal': [ $allocation.allocationContext.id, 'order_cash_and_carry']
                actions:
                    - '@tree':
                          actions:
                              - '@foreach':
                                    array: $allocation.items
                                    value: $.result.value
                                    actions:
                                        - '@assign_value': [$.result.value.quantityConfirmed, $.result.value.quantity]
                                        - '@call_service_method':
                                              service: marello_inventory.model.inventory_level_totals_calculator
                                              method: getTotalAllocationQtyConfirmed
                                              method_parameters: [$.result.value]
                                              attribute: $.result.totalQtyConfirmed
                                        - '@tree':
                                              conditions:
                                                  '@equal': [$.result.totalQtyConfirmed, $.result.value.orderItem.quantity]
                                              actions:
                                                  - '@request_enum_entity':
                                                        enum_code: marello_item_status
                                                        identifier: 'complete'
                                                        attribute: $.result.value.orderItem.status
                    - '@extendable':
                          events: [ extendable_action.allocation_complete ]
            rejected_definition:
                actions:
                    - '@foreach':
                          array: $allocation.items
                          value: $.result.value
                          actions:
                              - '@assign_value': [$.result.value.quantityConfirmed, 0]
                              - '@assign_value': [$.result.value.quantityRejected, $.result.value.quantity]
                    - '@call_service_method':
                            service: Marello\Bundle\InventoryBundle\Provider\InventoryAllocationProvider
                            method: allocateOrderToWarehouses
                            method_parameters: [ $allocation.order, $allocation ]