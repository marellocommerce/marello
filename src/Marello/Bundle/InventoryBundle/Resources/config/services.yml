imports:
    - { resource: controllers.yml }

services:
    marello_product.widget_provider.actions.variant_mass_inventory:
        parent: oro_ui.widget_provider.action_button.abstract
        arguments:
            - marello_variant_mass_inventory_button
            - marello_variant_mass_inventory_link
        tags:
            - { name: oro_ui.view_action_provider, group: product }

    marello_inventory.logging.chart_builder:
        class: 'Marello\Bundle\InventoryBundle\Logging\ChartBuilder'
        public: true
        arguments:
            - '@Marello\Bundle\InventoryBundle\Entity\Repository\InventoryLevelLogRecordRepository'
            - '@marello_inventory.model.inventory_level_totals_calculator'
            - '@oro_dashboard.datetime.helper'
            - '@translator'
            - '@oro_security.acl_helper'

    marello_inventory.manager.inventory_manager:
        class: 'Marello\Bundle\InventoryBundle\Manager\InventoryManager'
        public: true
        arguments:
            - '@marello_inventory.validator.inventory_update_context'
            - '@marello_inventory.model.inventory_level_calculator'
            - '@oro_entity.doctrine_helper'
            - '@oro_security.acl_helper'
            - '@event_dispatcher'
        lazy: true

    marello_inventory.validator.inventory_update_context:
        class: 'Marello\Bundle\InventoryBundle\Model\InventoryUpdateContextValidator'

    marello_inventory.manager.inventory_item_manager:
        class: 'Marello\Bundle\InventoryBundle\Manager\InventoryItemManager'
        public: true
        arguments:
            - '@oro_entity.doctrine_helper'
        lazy: true

    marello_inventory.model.inventory_level_calculator:
        class: 'Marello\Bundle\InventoryBundle\Model\InventoryLevelCalculator'

    marello_inventory.model.inventory_level_totals_calculator:
        class: 'Marello\Bundle\InventoryBundle\Model\InventoryTotalCalculator'
        public: true
        calls:
            - [setDoctrineHelper, ['@oro_entity.doctrine_helper']]

    marello_inventory.twig.inventory_total_extension:
        class: 'Marello\Bundle\InventoryBundle\Twig\InventoryTotalExtension'
        arguments:
            - '@marello_inventory.model.inventory_level_totals_calculator'
        tags:
            - { name: twig.extension }

    marello_inventory.twig.warehouse_extension:
        class: 'Marello\Bundle\InventoryBundle\Twig\WarehouseExtension'
        arguments:
            - '@doctrine'
            - '@marello_inventory.manager.inventory_manager'
        tags:
            - { name: twig.extension }

    marello_inventory.provider.order_warehouse:
        class: 'Marello\Bundle\InventoryBundle\Provider\OrderWarehousesProvider'
        arguments:
            - '@Marello\Bundle\InventoryBundle\Strategy\WFA\WFAStrategiesRegistry'

    Marello\Bundle\InventoryBundle\Entity\Repository\WarehouseRepository:
        parent: oro_entity.abstract_repository
        arguments:
            - 'Marello\Bundle\InventoryBundle\Entity\Warehouse'
        tags:
            - { name: doctrine.repository_service }

    Marello\Bundle\InventoryBundle\Entity\Repository\WarehouseGroupRepository:
        parent: oro_entity.abstract_repository
        arguments:
            - 'Marello\Bundle\InventoryBundle\Entity\WarehouseGroup'
        tags:
            - { name: doctrine.repository_service }

    Marello\Bundle\InventoryBundle\Entity\Repository\WarehouseChannelGroupLinkRepository:
        parent: oro_entity.abstract_repository
        arguments:
            - 'Marello\Bundle\InventoryBundle\Entity\WarehouseChannelGroupLink'
            - '@oro_security.acl_helper'
        tags:
            - { name: doctrine.repository_service }

    marello_inventory.balancer_strategy.registry:
        class: 'Marello\Bundle\InventoryBundle\Strategy\BalancerStrategiesRegistry'

    marello_inventory.balancer_strategy.equal_division_strategy:
        class: 'Marello\Bundle\InventoryBundle\Strategy\EqualDivision\EqualDivisionBalancerStrategy'
        tags:
            - { name: marello_inventory_balancer_strategy }

    marello_inventory.model.balancer.inventory_balancer:
        class: 'Marello\Bundle\InventoryBundle\Model\InventoryBalancer\InventoryBalancer'
        arguments:
            - '@marello_inventory.balancer_strategy.registry'
            - '@marello_inventory.manager.inventory_item_manager'
            - '@marello_inventory.model.balancedinventory.balanced_inventory_handler'
            - '@oro_config.manager'

    marello_inventory.model.balancer.inventorybalancer_trigger_calculator:
        class: 'Marello\Bundle\InventoryBundle\Model\InventoryBalancer\InventoryBalancerTriggerCalculator'
        arguments:
            - '@oro_config.manager'

    marello_inventory.provider.balancer.balancing_strategy_choices_provider:
        class: 'Marello\Bundle\InventoryBundle\Provider\BalancingStrategyChoicesProvider'
        arguments:
            - '@marello_inventory.balancer_strategy.registry'
            - '@translator'

    marello_inventory.provider.available_inventory_provider:
        class: 'Marello\Bundle\InventoryBundle\Provider\AvailableInventoryProvider'
        arguments:
            - '@oro_entity.doctrine_helper'
            - '@oro_security.acl_helper'

    marello_inventory.provider.available_inventory_form_provider:
        class: 'Marello\Bundle\InventoryBundle\Provider\AvailableInventoryFormProvider'
        arguments:
            - '@marello_inventory.provider.available_inventory_provider'
        tags:
            - { name: marello_order.order_item_data_provider, type: inventory, priority: 15 }

    marello_inventory.model.balancedinventory.balanced_inventory_handler:
        class: 'Marello\Bundle\InventoryBundle\Model\BalancedInventory\BalancedInventoryHandler'
        arguments:
            - '@doctrine'
            - '@marello_inventory.model.balancedinventory.balanced_inventory_factory'
            - '@oro_security.acl_helper'

    marello_inventory.model.balancedinventory.balanced_inventory_factory:
        class: 'Marello\Bundle\InventoryBundle\Model\BalancedInventory\BalancedInventoryFactory'

    marello_inventory.manager.balancedinventory_manager:
        class: 'Marello\Bundle\InventoryBundle\Manager\BalancedInventoryManager'
        arguments:
            - '@marello_inventory.model.balancedinventory.balanced_inventory_handler'
            - '@marello_inventory.validator.inventory_update_context'
            - '@event_dispatcher'
        lazy: true

    marello_inventory.async.inventory_rebalance_products_processor:
        class: 'Marello\Bundle\InventoryBundle\Async\InventoryRebalanceProductsProcessor'
        arguments:
            - '@oro_message_queue.client.message_producer'
            - '@logger'
            - '@Marello\Bundle\ProductBundle\Entity\Repository\ProductRepository'
        tags:
            - { name: 'oro_message_queue.client.message_processor' }

    marello_inventory.async.inventory_rebalance_product_processor:
        class: 'Marello\Bundle\InventoryBundle\Async\InventoryRebalanceProductProcessor'
        arguments:
            - '@marello_inventory.model.balancer.inventory_balancer'
            - '@logger'
            - '@doctrine'
        tags:
            - { name: 'oro_message_queue.client.message_processor' }

    marello_inventory.async.balanced_inventory_reset_processor:
        class: 'Marello\Bundle\InventoryBundle\Async\BalancedInventoryResetProcessor'
        arguments:
            - '@logger'
            - '@oro_entity.doctrine_helper'
            - '@marello_inventory.model.balancedinventory.balanced_inventory_handler'
        tags:
            - { name: 'oro_message_queue.client.message_processor' }

    Marello\Bundle\InventoryBundle\Entity\Repository\BalancedInventoryRepository:
        parent: oro_entity.abstract_repository
        arguments:
            - 'Marello\Bundle\InventoryBundle\Entity\BalancedInventoryLevel'
        tags:
            - { name: doctrine.repository_service }

    Marello\Bundle\InventoryBundle\Entity\Repository\InventoryLevelLogRecordRepository:
        parent: oro_entity.abstract_repository
        arguments:
            - 'Marello\Bundle\InventoryBundle\Entity\InventoryLevelLogRecord'
        tags:
            - { name: doctrine.repository_service }

    Marello\Bundle\InventoryBundle\Entity\Repository\InventoryItemRepository:
        public: true
        parent: oro_entity.abstract_repository
        arguments:
            - 'Marello\Bundle\InventoryBundle\Entity\InventoryItem'
        tags:
            - { name: doctrine.repository_service }

    Marello\Bundle\InventoryBundle\Entity\Repository\InventoryLevelRepository:
        parent: oro_entity.abstract_repository
        arguments:
            - 'Marello\Bundle\InventoryBundle\Entity\InventoryLevel'
        tags:
            - { name: doctrine.repository_service }

    marello_inventory.form.inventory_order_on_demand_validator:
        class: 'Marello\Bundle\InventoryBundle\Validator\InventoryOrderOnDemandValidator'
        calls:
            - [setConfigManager, ['@oro_config.manager']]
        tags:
            - { name: validator.constraint_validator, alias: marello_inventory.order_on_demand_validator }

    Marello\Bundle\InventoryBundle\Command\InventoryBalanceCommand:
        arguments:
            - '@doctrine'
            - '@marello_inventory.model.balancer.inventory_balancer'
            - '@oro_message_queue.client.message_producer'
        tags:
            - { name: console.command }

    Marello\Bundle\InventoryBundle\Provider\OrderWarehousesProvider:
        lazy: true
        arguments:
            - '@Marello\Bundle\InventoryBundle\Strategy\WFA\WFAStrategiesRegistry'

    Marello\Bundle\InventoryBundle\Provider\InventoryAllocationProvider:
        public: true
        lazy: true
        arguments:
            - '@oro_entity.doctrine_helper'
            - '@Marello\Bundle\InventoryBundle\Provider\OrderWarehousesProvider'
            - '@event_dispatcher'
        calls:
            - [setAllocationExclusionProvider, ['@Marello\Bundle\InventoryBundle\Provider\AllocationExclusionProvider']]

    Marello\Bundle\InventoryBundle\Strategy\WFA\WFAStrategiesRegistry: ~

    Marello\Bundle\InventoryBundle\Strategy\WFA\Quantity\QuantityWFAStrategy:
        arguments:
            - '@Marello\Bundle\InventoryBundle\Strategy\WFA\Quantity\Calculator\SingleWHCalculator'
            - '@oro_entity.doctrine_helper'
            - '@oro_config.manager'
        calls:
            - [setAllocationExclusionProvider, ['@Marello\Bundle\InventoryBundle\Provider\AllocationExclusionProvider']]
            - [setAllocationItemFilterProvider, ['@Marello\Bundle\InventoryBundle\Provider\Allocation\AllocationItemFilterProvider']]
            - [setEventDispatcher, ['@event_dispatcher']]
        tags:
            - { name: marello_inventory_wfa_strategy }

    Marello\Bundle\InventoryBundle\Strategy\WFA\Quantity\Calculator\SingleWHCalculator: ~

    Marello\Bundle\InventoryBundle\Command\InventoryReAllocateCronCommand:
        arguments:
            - '@oro_entity.doctrine_helper'
            - '@Marello\Bundle\InventoryBundle\Provider\InventoryAllocationProvider'
            - '@oro_message_queue.client.message_producer'
        tags:
            - { name: console.command }

    Marello\Bundle\InventoryBundle\Command\InventorySellByDateRecalculateCronCommand:
        arguments:
            - '@oro_entity.doctrine_helper'
            - '@marello_inventory.model.inventory_level_calculator'
            - '@marello_inventory.manager.inventory_manager'
        tags:
            - { name: console.command }

    Marello\Bundle\InventoryBundle\Model\Allocation\WarehouseNotifierRegistry: ~

    Marello\Bundle\InventoryBundle\Provider\WarehouseNotifierChoicesProvider:
        arguments:
            - '@Marello\Bundle\InventoryBundle\Model\Allocation\WarehouseNotifierRegistry'
            - '@translator'

    Marello\Bundle\InventoryBundle\Model\Allocation\Notifier\WarehouseEmailNotifier:
        arguments:
            - '@marello_notification.email.send_processor'
        tags:
            - { name: marello_inventory_warehouse_notifier }

    Marello\Bundle\InventoryBundle\Model\Allocation\Notifier\WarehouseManualNotifier:
        tags:
            - { name: marello_inventory_warehouse_notifier }

    Marello\Bundle\InventoryBundle\Provider\AllocationExclusionProvider: ~

    Marello\Bundle\InventoryBundle\Provider\Allocation\AllocationItemFilterProvider: ~

    Marello\Bundle\InventoryBundle\Factory\AllocationShippingContextFactory:
        public: true
        arguments:
            - '@marello_order.shipping_line_item.converter_basic'
            - '@marello_shipping.context.builder_factory_basic'
        calls:
            - [setEventDispatcher, ['@event_dispatcher']]

    Marello\Bundle\InventoryBundle\Form\Handler\ReshipmentHandler:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@Marello\Bundle\InventoryBundle\Provider\InventoryAllocationProvider'
        tags:
            - { name: oro_form.form.handler, alias: marello_inventory.reshipment_form.handler }

    Marello\Bundle\InventoryBundle\EventListener\Action\Condition\ReshipmentActionListener:
        tags:
            - { name: kernel.event_listener, event: extendable_condition.reshipment_allowed, method: isReshipmentAllowed }

    Marello\Bundle\InventoryBundle\Api\Processor\ComputeSalesChannelsField:
        arguments:
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: oro.api.processor, action: customize_loaded_data, class: Marello\Bundle\InventoryBundle\Entity\BalancedInventoryLevel }

    Marello\Bundle\InventoryBundle\Api\Processor\CustomizeInventoryLevelFormData:
        arguments:
            - '@event_dispatcher'
            - '@oro_config.manager'
        tags:
            - { name: oro.api.processor, action: customize_form_data, event: pre_submit, class: Marello\Bundle\InventoryBundle\Entity\InventoryLevel }
            - { name: oro.api.processor, action: customize_form_data, event: submit, class: Marello\Bundle\InventoryBundle\Entity\InventoryLevel }

    Marello\Bundle\InventoryBundle\EventListener\Datagrid\ExpectedInventoryItemGridListener:
        tags:
            - { name: kernel.event_listener, event: oro_datagrid.datagrid.build.after.marello-inventory-expected-inventory-item-grid, method: onBuildAfter }

    Marello\Bundle\InventoryBundle\EventListener\Datagrid\ExpectedInventoryForAllocationItemsGridListener:
        tags:
            - { name: kernel.event_listener, event: oro_datagrid.datagrid.build.before.marello-allocation-items-grid, method: onBuildBefore }
