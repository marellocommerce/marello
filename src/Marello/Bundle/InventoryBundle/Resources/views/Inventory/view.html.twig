{% extends '@OroUI/actions/view.html.twig' %}
{% import '@OroUI/macros.html.twig' as UI %}
{% import '@OroDataGrid/macros.html.twig' as dataGrid %}

{% block navButtons %}
    {{ UI.button({
        'path': path('marello_inventory_inventorylevel_index', {'id': entity.id}),
        'label': 'marello.inventory.inventorylevel.log.label'|trans
    }) }}
    {% if is_granted('EDIT', entity) %}
        {{ UI.editButton({
            'path' : path('marello_inventory_inventory_update', { id: entity.id }),
            'entity_label': 'marello.product.entity_label'|trans
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
        'entity':      entity,
        'indexPath':   path('marello_inventory_inventory_index'),
        'indexLabel': 'marello.inventory.label'|trans,
        'entityTitle': product.sku
    } %}
    {{ parent() }}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'marello-inventory-view' %}
    {% set generalSubblocks = [] %}

    {% set productInformationWidget %}
        <div class="widget-content">
            <div class="row-fluid form-horizontal">
                <div class="responsive-block">
                    <div class="box-type1">
                        {{ oro_widget_render({
                            'widgetType': 'block',
                            'url': path('marello_inventory_widget_info', {id: entity.id}),
                            'title': 'marello.product.product_information'|trans
                        }) }}
                    </div>
                    <div class="box-type1">
                        <div class="title">
                            <span class="widget-title">{{ 'marello.inventory.inventoryitem.section.unit_of_measurement.label'|trans }}</span>
                        </div>
                        <div class="widget-content">
                            <div class="row-fluid form-horizontal">
                                <div class="responsive-block">
                                    {{ UI.renderProperty('marello.inventory.inventoryitem.product_unit.label'|trans, entity.productUnit|default('N/A')) }}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endset %}
    {% set generalSubblocks = generalSubblocks|merge([{'data' : [productInformationWidget] }]) %}


    {% set inventoryItemLevelCombinedWidget %}
        <div class="widget-content">
            <div class="row-fluid form-horizontal">
                <div class="responsive-block">
                    <div class="box-type1">
                        <div class="title">
                            <span class="widget-title">{{ 'marello.inventory.inventoryitem.section.inventorybatch.label'|trans }}</span>
                        </div>
                        {{ UI.renderProperty('marello.inventory.inventoryitem.enable_batch_inventory.label'|trans, entity.enableBatchInventory ? 'marello.core.yes.label'|trans : 'marello.core.no.label'|trans) }}
                    </div>
                </div>
            </div>
        </div>
        <div class="responsive-block">
            <div class="box-type1">
                {% placeholder marello_inventory_levels_totals with {'entity' : entity} %}
            </div>
        </div>
    {% endset %}
    {% set generalSubblocks = generalSubblocks|merge([{'data' : [inventoryItemLevelCombinedWidget] }]) %}

    {% set dataBlocks = [
        {
            'title': 'General Information'|trans,
            'class': 'active',
            'subblocks': generalSubblocks
        }
    ] %}
    {% set dataBlocks = dataBlocks|merge([{
            'title' : 'marello.inventory.inventorylevel.entity_plural_label'|trans,
            'subblocks': [{
                'title' : null,
                'data' : [
                    dataGrid.renderGrid('marello-inventory-levels', {'inventoryItemId': entity.id})
            ]
            }]
        }])
    %}

    {% set replenishmentInfoWidget %}
        <div class="widget-content">
            <div class="row-fluid form-horizontal">
                <div class="responsive-block">
                    {{ UI.renderHtmlProperty('marello.inventory.inventoryitem.purchase_inventory.label'|trans, entity.purchaseInventory) }}
                    {{ UI.renderHtmlProperty('marello.inventory.inventoryitem.desired_inventory.label'|trans, entity.desiredInventory) }}
                    {{ UI.renderHtmlProperty('marello.inventory.inventoryitem.replenishment.label'|trans, entity.replenishment) }}
                </div>
            </div>
        </div>
    {% endset %}

     {% set backOrderInfoWidget %}
        <div class="widget-content">
            <div class="row-fluid form-horizontal">
                <div class="responsive-block">
                    {{ UI.renderProperty('marello.inventory.inventoryitem.backorder_allowed.label'|trans, entity.backorderAllowed ? 'marello.core.yes.label'|trans : 'marello.core.no.label'|trans) }}
                    {{ UI.renderProperty('marello.inventory.inventoryitem.max_qty_to_backorder.label'|trans, entity.maxQtyToBackorder) }}
                    {{ UI.renderProperty('marello.inventory.inventoryitem.back_orders_datetime.label'|trans, entity.backOrdersDatetime|oro_format_datetime) }}
                </div>
            </div>
        </div>
    {% endset %}

    {% set preOrderInfoWidget %}
        <div class="widget-content">
            <div class="row-fluid form-horizontal">
                <div class="responsive-block">
                    {{ UI.renderProperty('marello.inventory.inventoryitem.can_preorder.label'|trans, entity.canPreorder ? 'marello.core.yes.label'|trans : 'marello.core.no.label'|trans) }}
                    {{ UI.renderProperty('marello.inventory.inventoryitem.max_qty_to_preorder.label'|trans, entity.maxQtyToPreorder) }}
                    {{ UI.renderProperty('marello.inventory.inventoryitem.pre_orders_datetime.label'|trans, entity.preOrdersDatetime|oro_format_datetime) }}
                </div>
            </div>
        </div>
    {% endset %}

    {% set orderOnDemandInfoWidget %}
        <div class="widget-content">
            <div class="row-fluid form-horizontal">
                <div class="responsive-block">
                    {{ UI.renderProperty('marello.inventory.inventoryitem.order_on_demand.label'|trans, entity.orderOnDemandAllowed ? 'marello.core.yes.label'|trans : 'marello.core.no.label'|trans) }}
                </div>
            </div>
        </div>
    {% endset %}

    {% set dataBlocks = dataBlocks|merge([{
            'title': 'marello.inventory.inventoryitem.replenishment.label'|trans,
            'useSpan': false,
            'subblocks': [
                { 'data' : [replenishmentInfoWidget] }
            ]
        }])
    %}

    {% set dataBlocks = dataBlocks|merge([{
            'title': 'marello.inventory.inventoryitem.section.backorder_preorder.label'|trans,
            'useSpan': false,
            'subblocks': [{
                'title': 'marello.inventory.inventoryitem.section.backorder.label'|trans,
                'data': [
                    backOrderInfoWidget
                ]
            },
            {
                'title': 'marello.inventory.inventoryitem.section.preorder.label'|trans,
                'data': [
                    preOrderInfoWidget
                ]
            }]
        }])
    %}
    {% set orderOnDemandAllowed = oro_config_value('marello_order.order_on_demand_enabled') %}
    {% if orderOnDemandAllowed %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'marello.inventory.inventoryitem.section.orderondemand.label'|trans,
            'useSpan': false,
            'subblocks': [
                { 'data' : [orderOnDemandInfoWidget] }
            ]
        }])
        %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge([{
        'title': 'marello.inventory.movements.label'|trans,
        'useSpan': false,
        'subblocks': [
            { 'data' : [
                dataGrid.renderGrid('marello-inventory-log', {'inventoryItemId': entity.id})
            ] }
        ]
    }])
    %}

    {% set data = { 'dataBlocks': dataBlocks } %}
    {{ parent() }}
{% endblock content_data %}
