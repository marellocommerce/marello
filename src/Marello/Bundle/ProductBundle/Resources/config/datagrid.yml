datagrid:
    marello-products-grid:
        extended_entity_name: Marello\Bundle\ProductBundle\Entity\Product
        source:
            type: orm
            acl_resource: marello_product_view
            query:
                select:
                    - p.id
                    - p.name
                    - p.sku
                    - s.label as status
                    - p.createdAt
                    - p.updatedAt
                    - COALESCE(SUM(i.quantity), 0) AS stockLevel
                from:
                    - { table: MarelloProductBundle:Product, alias: p }
                join:
                    left:
                        - { join: p.status, alias: s }
                        - { join: p.inventoryItems, alias: i }
                groupBy: p.id
        columns:
            sku:
                label:              marello.product.sku.label
                frontend_type:      string
            name:
                label:              marello.product.name.label
                frontend_type:      string
            stockLevel:
                label:              marello.product.stock_level.label
                frontend_type:      number
                data_name:          stockLevel
            status:
                label:              marello.product.status.label
                frontend_type:      string
            createdAt:
                label:              oro.ui.created_at
                frontend_type:      datetime
            updatedAt:
                label:              oro.ui.updated_at
                frontend_type:      datetime
        properties:
            id: ~
            view_link:
                type:       url
                route:      marello_product_view
                params:     [ id ]
            update_link:
                type:       url
                route:      marello_product_update
                params:     [ id ]
            delete_link:
                type:       url
                route:      marello_product_api_delete_product
                params:     [ id ]
            inventory_link:
                type:       url
                route:      marello_inventory_inventory_update
                params:     [ id ]
        sorters:
            columns:
                sku:            { data_name: p.sku }
                name:           { data_name: p.name }
                stockLevel:     { data_name: stockLevel }
                status:         { data_name: s.label }
                createdAt:      { data_name: p.createdAt }
                updatedAt:      { data_name: p.updatedAt }
            default:
                name: %oro_datagrid.extension.orm_sorter.class%::DIRECTION_DESC
        filters:
            columns:
                sku:
                    type:             string
                    data_name:        p.sku
                name:
                    type:             string
                    data_name:        p.name
                stockLevel:
                    type:             string
                    data_name:        stockLevel
                status:
                    type: entity
                    data_name: s
                    options:
                        field_options:
                            class: Marello\Bundle\ProductBundle\Entity\ProductStatus
        actions:
            view:
                type:           navigate
                label:          oro.grid.action.view
                link:           view_link
                icon:           eye-open
                acl_recource:   marello_product_view
                rowAction:      true
            update:
                type:           navigate
                acl_resource:   marello_product_update
                label:          marello.product.update
                icon:           edit
                link:           update_link
            delete:
                type:           delete
                link:           delete_link
                acl_resource:   marello_product_delete
                icon:           trash
                label:          oro.grid.action.delete
        options:
            entityHint: product
            export: true
            entity_pagination: true

    marello-product-variant-grid:
        extended_entity_name: Marello\Bundle\ProductBundle\Entity\Product
        source:
            type: orm
            acl_resource: marello_product_view
            query:
                select:
                    - p.name
                    - p.sku
                    - s.label as status
                    - SUM(i.quantity) AS stockLevel
                from:
                    - { table: Marello\Bundle\ProductBundle\Entity\Product, alias: p }
                join:
                    left:
                        - { join: p.status, alias: s }
                        - { join: p.inventoryItems, alias: i }
                where:
                    and:
                        - p.variant = :variantId
                        - p.id != :productId
                groupBy: p.id
            bind_parameters:
                - variantId
                - productId
        columns:
            sku:
                label:              marello.product.sku.label
                frontend_type:      string
            name:
                label:              marello.product.name.label
                frontend_type:      string
            stockLevel:
                label:              marello.product.stock_level.label
                frontend_type:      string
            status:
                label:              marello.product.status.label
                frontend_type:      string
        sorters:
            columns:
                name:           { data_name: p.name }
                sku:            { data_name: p.sku }
            default:
                stockLevel:  %oro_datagrid.extension.orm_sorter.class%::DIRECTION_DESC
        options:
            entityHint: product
            toolbarOptions:
                hide: true
                pagination:
                    hide: true

    marello-product-variant-extended-grid:
        extended_entity_name: Marello\Bundle\ProductBundle\Entity\Product
        source:
            type: orm
            acl_resource: marello_product_view
            query:
                select:
                    - p.id
                    - >
                        (CASE WHEN (:variant IS NOT NULL) THEN
                            CASE WHEN (p.variant = :variant OR p.variant IN (:data_in)) AND p.variant NOT IN (:data_not_in)
                            THEN true ELSE false END
                        ELSE
                            false
                        END) as hasVariant
                    - p.name
                    - p.sku
                    - s.label as status
                    - SUM(i.quantity) AS stockLevel
                from:
                    - { table: Marello\Bundle\ProductBundle\Entity\Product, alias: p }
                join:
                    left:
                        - { join: p.status, alias: s }
                        - { join: p.inventoryItems, alias: i }
                where:
                    and:
                        - p.id != :product
                groupBy: p.id
            bind_parameters:
                -
                    name: variant
                    default: null
                    type: integer
                -
                    name: product
                    default: null
                    type: integer
        columns:
            hasVariant:
                label:                ~
                editable:             true
                frontend_type:        boolean
            sku:
                label:              marello.product.sku.label
                frontend_type:      string
            name:
                label:              marello.product.name.label
                frontend_type:      string
            stockLevel:
                label:              marello.product.stock_level.label
                frontend_type:      string
            status:
                label:              marello.product.status.label
                frontend_type:      string
        filters:
            columns:
                hasVariant:
                    label:            marello.product.variant.selected_variants.label
                    type:             boolean
                    data_name:        hasVariant
                name:
                    label:            marello.product.name.label
                    type:             string
                    data_name:        p.name
                sku:
                    label:            marello.product.sku.label
                    type:             string
                    data_name:        p.sku
        sorters:
            columns:
                name:           { data_name: p.name }
                sku:            { data_name: p.sku }
                hasVariant:     { data_name: hasVariant }
            default:
                hasVariant:  %oro_datagrid.extension.orm_sorter.class%::DIRECTION_DESC
        properties:
            id: ~
        options:
            entityHint: product
            rowSelection:
                dataField: id
                columnName: hasVariant
                selectors:
                    included: '#addVariants'
                    excluded: '#removeVariants'
            toolbarOptions:
                pageSize:
                    default_per_page: 10

    marello-product-saleschannel-grid:
        source:
            type: orm
            acl_resource: marello_product_view
            query:
                select:
                    - sc
                from:
                    - { table: MarelloSalesBundle:SalesChannel, alias: sc }
                where:
                    and:
                        - sc.id IN(:channels)
            bind_parameters:
                - channels
        columns:
            name:
                label:                marello.sales.saleschannel.name.label
                frontend_type:        string
            code:
                label:                marello.sales.saleschannel.code.label
                frontend_type:        string
            channelType:
                label:                marello.sales.saleschannel.channel_type.label
                frontend_type:        string
            currency:
                label:                marello.sales.saleschannel.currency.label
                frontend_type:        string
            active:
                label:                marello.sales.saleschannel.active.label
                frontend_type:        boolean
            default:
                label:                marello.sales.saleschannel.default.label
                frontend_type:        boolean
        properties:
            id: ~
        options:
            entityHint: sc

    marello-product-saleschannel-extended-grid:
        extends: marello-product-saleschannel-grid
        source:
            query:
                select:
                    - >
                        (CASE WHEN (:product IS NOT NULL) THEN
                            CASE WHEN (sc.id IN (:channels) OR sc.id IN (:data_in)) AND sc.id NOT IN (:data_not_in)
                            THEN true ELSE false END
                        ELSE
                            CASE WHEN sc.id IN (:channels) AND sc.id NOT IN (:data_not_in)
                            THEN true ELSE false END
                        END) as hasChannel
            bind_parameters:
                -
                    name: product
                    default: null
                    type: integer
        columns:
            hasChannel:
                label:                ~
                editable:             true
                frontend_type:        boolean
                add_before:           true
        sorters:
            columns:
                hasChannel:           { data_name: hasChannel }
            default:                  { hasChannel: %oro_datagrid.extension.orm_sorter.class%::DIRECTION_DESC }
        filters:
            columns:
                hasChannel:
                    label:            marello.sales.saleschannel.selected_channels.label
                    type:             boolean
                    data_name:        hasChannel
                currency:
                    label:            marello.sales.saleschannel.currency.label
                    type:             string
                    data_name:        sc.currency
            default:
                hasChannel:
                    value:            1
        properties:
            id: ~
        options:
            entityHint: product
            removeWhereClause: true
            rowSelection:
                dataField: id
                columnName: hasChannel
                selectors:
                    included: '#addSalesChannels'
                    excluded: '#removeSalesChannels'
            toolbarOptions:
                pageSize:
                    items: [10]
                    default_per_page: 10