{% extends '@OroUI/actions/update.html.twig' %}

{% import '@OroDataGrid/macros.html.twig' as dataGrid %}
{% import '@OroUI/macros.html.twig' as UI %}

{% set gridName = 'marello-product-saleschannel-extended-grid' %}

{% set entity = form.vars.value %}

{% if entity.id %}
    {% oro_title_set({params : {"%name%": entity.name } }) %}
{% endif %}

{% if queryParams is defined %}
    {% set formAction = path('marello_product_create_step_two', queryParams) %}
{% else %}
    {% set formAction = path('marello_product_create_step_two') %}
{% endif %}

{% block pageHeader %}
    {% if entity.id %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('marello_product_index'),
            'indexLabel':  'marello.product.entity_plural_label'|trans,
            'entityTitle': entity.name|default('N/A')
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'marello.product.entity_label'|trans}) %}
        {% include '@OroUI/page_title_block.html.twig' with { title: title }%}
    {% endif %}
{% endblock pageHeader %}

{% block navButtons %}
    {{ parent() }}

    {{ UI.cancelButton(path('marello_product_index')) }}
    {% set html = UI.saveAndCloseButton({
        'route': 'marello_product_view',
        'params': {'id': '$id'}
    }) %}
    {% if is_granted('oro_product_create') %}
        {% set saveAndDuplicateButton = UI.saveActionButton({
        'label': 'marello.product.ui.save_and_duplicate'|trans,
        'action': 'save_and_duplicate'
        }) %}
        {% set html = html ~ saveAndDuplicateButton %}
    {% endif %}
    {% if entity.id or is_granted('marello_product_update') %}
        {% set html = html ~ UI.saveAndStayButton({
            'route': 'marello_product_update',
            'params': {'id': '$id'}
        }) %}
    {% endif %}
    {{ UI.dropdownSaveButton({'html': html}) }}
{% endblock navButtons %}


{% block content_data %}
    {% set id = 'marello-product-create-step-two' %}
    {% set productChannelPrices %}
        {% set pricingEnabled = form.vars.value.data.pricing_enabled is defined and form.vars.value.data.pricing_enabled %}
        {% set priceEnableElement = { pricing_enable_id: form.pricing_enabled.vars.id } %}
        <h5 class="user-fieldset">
            <span>{{ 'marello.pricing.productchannelprice.entity_plural_label'|trans }}</span>
        </h5>
        <div class="pricing-line-items {% if pricingEnabled %}pricing-enabled{% endif %}"
             data-page-component-module="oroui/js/app/components/view-component"
             data-page-component-options="{{ {
                 view: 'marellopricing/js/app/views/channel-pricing-items-view',
                 options: priceEnableElement|default({})
             }|json_encode }}"
             data-layout="separate">
            {{ form_widget(form.channelPrices) }}
            {{ form_errors(form.channelPrices) }}
        </div>
    {% endset %}

    {% set productPrices %}
        <h5 class="user-fieldset">
            <span>{{ 'marello.pricing.productprice.entity_plural_label'|trans }}</span>
        </h5>
        {% if form.prices|length > 0 %}
            <div class="row-divider"></div>
            <div class="pricing-line-items pricing-enabled"
                 data-page-component-module="oroui/js/app/components/view-component"
                 data-page-component-options="{{ {
                     view: 'marellolayout/js/app/views/abstract-items-view',
                     options: {}
                 }|json_encode }}"
                 data-layout="separate">
                {{ form_widget(form.prices) }}
                {{ form_errors(form.prices) }}
            </div>
        {% else %}
            <div class="no-data">
                <span>{{ 'marello.pricing.productprice.no_channels_enabled_or_configured'|trans }}</span>
            </div>
        {% endif %}
        <div class="row-divider"></div>
    {% endset %}

    {% set salesChannelTaxCodes %}
        <h5 class="user-fieldset">
            <span>{{ 'marello.product.productchanneltaxrelation.widget_title'|trans }}</span>
        </h5>
        <div class="tax-line-items"
             data-page-component-module="oroui/js/app/components/view-component"
             data-page-component-options="{{ {
                 view: 'marellolayout/js/app/views/abstract-items-view'
             }|json_encode }}"
             data-layout="separate">
            {{ form_widget(form.salesChannelTaxCodes) }}
            {{ form_errors(form.salesChannelTaxCodes) }}
        </div>
    {% endset %}

    {% if marello_entity_has_attribute(entity, 'suppliers') %}
        {% set suppliers %}
            <div class="product-suppliers"
                 data-page-component-module="oroui/js/app/components/view-component"
                 data-page-component-options="{{ {
                     view: 'marellosupplier/js/app/views/product-suppliers-view',
                     suppliers: suppliers|default({})
                 }|json_encode }}"
                 data-layout="separate">
                {{ form_widget(form.suppliers) }}
                {{ form_errors(form.suppliers) }}
            </div>
        {% endset %}
    {% endif %}

    {% set channelIds = marello_sales_get_saleschannel_ids(entity)|length > 0 ? marello_sales_get_saleschannel_ids(entity) : 0 %}
    {% set generalData = [
        form_row(form.names),
        form_row(form.sku),
        form_row(form.status),
    ] %}
    {% if marello_entity_has_attribute(entity, 'weight') %}
        {% set generalData = generalData|merge([form_row(form.weight)]) %}
    {% endif %}
    {% if marello_entity_has_attribute(entity, 'warranty') %}
        {% set generalData = generalData|merge([form_row(form.warranty)]) %}
    {% endif %}
    {% if marello_entity_has_attribute(entity, 'manufacturingCode') %}
        {% set generalData = generalData|merge([form_row(form.manufacturingCode)]) %}
    {% endif %}
    {% set generalData = generalData|merge([form_row(form.type)]) %}
    {% if marello_entity_has_attribute(entity, 'image') %}
        {% set generalData = generalData|merge([form_row(form.image)]) %}
    {% endif %}
    {% if marello_entity_has_attribute(entity, 'ARFile') %}
        {% set generalData = generalData|merge([form_row(form.ARFile)]) %}
    {% endif %}

    {% set dataBlocks = [
        {
            'title': 'marello.product.sections.general'|trans,
            'subblocks': [{
                'title': 'General',
                'data': generalData
            }]
        },
        {
            'title': 'marello.pricing.header.label'|trans,
            'class': 'active',
            'subblocks': [{
                'title': '',
                'data': [
                    productPrices,
                    productChannelPrices
                ]
            }]
        },
        {
            'title': 'marello.tax.taxcode.entity_plural_label'|trans,
            'class': 'active',
            'subblocks': [{
                'title': 'marello.tax.taxcode.widget_title'|trans,
                'data': [
                    form_row(form.taxCode),
                    salesChannelTaxCodes
                ]
            }]
        },
        {
            'title': 'marello.sales.saleschannel.entity_plural_label'|trans,
            'class': 'active',
            'subblocks': [{
                'title': 'marello.sales.saleschannel.header.label'|trans,
                'data': [
                    form_widget(form.addSalesChannels, {'id': 'addSalesChannels'}),
                    form_widget(form.removeSalesChannels, {'id': 'removeSalesChannels'}),
                    dataGrid.renderGrid(gridName, { product: form.vars.value.id ? : null, channels: channelIds })
                ]
            }]
        }
    ] %}
    {% if marello_entity_has_attribute(entity, 'suppliers') %}
        {% set dataBlocks = dataBlocks|merge([
            {
                'title': 'marello.supplier.entity_plural_label'|trans,
                'class': 'active',
                'subblocks': [{
                    'title': '',
                    'data': {
                        'suppliers': suppliers
                    }
                }]
            }
        ]) %}
    {% endif %}
    {% if marello_entity_has_attribute(entity, 'categories') %}
        {% set dataBlocks = dataBlocks|merge([
            {
                'title' : 'marello.catalog.category.entity_plural_label'|trans,
                'subblocks': [{
                    'title' : null,
                    'useSpan': false,
                    'data' : [
                        form_widget(form.appendCategories, {'id': 'productAppendCategories'}),
                        form_widget(form.removeCategories, {'id': 'productRemoveCategories'}),
                        dataGrid.renderGrid('marello-product-categories-extend-grid', { product_id: entity.id ? entity.id : 0 }, { cssClass: 'inner-grid' })
                    ]
                }]
            }
        ]) %}
    {% endif %}

    {% set additionalData = [] %}
    {% for child in form.children %}
        {% if child.vars.extra_field is defined and child.vars.extra_field %}
            {% set additionalData = additionalData|merge([form_row(child)]) %}
        {% endif %}
    {% endfor %}

    {% if additionalData is not empty %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'marello.product.sections.additional'|trans,
            'subblocks': [{
                'title': '',
                'useSpan': false,
                'data' : additionalData
            }]
        }] ) %}
    {% endif %}

    {% set data = {
        'formErrors': form_errors(form) ? form_errors(form) : null,
        'dataBlocks': dataBlocks
    } %}

    {{ parent() }}
{% endblock %}
