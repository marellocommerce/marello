{% extends '@OroUI/actions/view.html.twig' %}
{% import '@OroDataGrid/macros.html.twig' as dataGrid %}
{% import '@OroEntityConfig/macros.html.twig' as entityConfig %}
{% import '@OroUI/macros.html.twig' as UI %}

{% oro_title_set({params : {"%name%": entity.defaultName.string|default('N/A'|trans) } }) %}
{% set gridName  = 'marello-products-grid' %}

{% block pageHeader %}
    {% set breadcrumbs = {
        'entity':      entity,
        'indexPath':   path('marello_product_index'),
        'indexLabel':  'marello.product.entity_plural_label'|trans,
        'entityTitle': entity.defaultName.string|default('N/A'|trans)
    } %}

    {{ parent() }}
{% endblock pageHeader %}

{% block breadcrumbs %}
    {% import '@OroUI/macros.html.twig' as UI %}

    {{ parent() }}
    {% if is_granted('VIEW', entity, 'status') %}
        <span class="page-title__status">
            {% if not entity.status %}
            {# status not defined #}
            {% elseif entity.status.name == constant('ENABLED', entity.status) %}
                {{ UI.badge('marello.product.status.enabled'|trans, 'enabled') }}
            {% elseif entity.status.name == constant('DISABLED', entity.status) %}
                {{ UI.badge('marello.product.status.disabled'|trans, 'disabled') }}
            {% endif %}
        </span>
    {% endif %}
{% endblock breadcrumbs %}

{#{% block navButtons %}#}
{#    {{ parent() }}#}
{#    {% if is_granted('EDIT', entity) %}#}
{#        {{ UI.editButton({#}
{#            'path': path('marello_product_update', {'id': entity.id}),#}
{#            'entity_label': 'marello.product.entity_label'|trans#}
{#        }) }}#}
{#    {% endif %}#}
{#{% endblock %}#}

{% block content_data %}
    {% set id = 'marello-product-view' %}
    {% set generalSubblocks = [] %}
    {% set productInformationWidget %}
        {{ oro_widget_render({
            'widgetType': 'block',
            'url': path('marello_product_widget_info', {id: entity.id}),
            'title': ''
        }) }}
    {% endset %}
    {% set generalSubblocks = generalSubblocks|merge([{'data' : [productInformationWidget]}]) %}

    {% set productImageWidget %}
        <div class="productImage-widget-wrapper">
            {{ oro_widget_render({
                'widgetType': 'block',
                'url': path('marello_product_widget_image', {id: entity.id}),
                'title': ''
            }) }}
        </div>
    {% endset %}
    {% set generalSubblocks = generalSubblocks|merge([{'data' : [productImageWidget]}]) %}

    {% set dataBlocks = [{
        'title': 'General'|trans,
        'subblocks': generalSubblocks
    }] %}

    {% set productChannelPriceWidget %}
        {{ oro_widget_render({
            'widgetType': 'block',
            'url': path('marello_product_widget_price', {id: entity.id}),
            'title': ''
        }) }}
    {% endset %}

    {% set productTaxes %}
        <div class="box-type1">
            <div class="title">
                <span class="widget-title">{{ 'marello.tax.taxcode.widget_title'|trans }}</span>
            </div>
            {{ UI.renderProperty('marello.tax.taxcode.entity_label'|trans, entity.taxCode) }}
        </div>
        <div class="box-type1">
            <div class="title">
                <span class="widget-title">{{ 'marello.product.productchanneltaxrelation.widget_title'|trans }}</span>
            </div>
            {{ dataGrid.renderGrid('marello-product-saleschannel-tax-grid', {'productId': entity.id }) }}
        </div>
    {% endset %}

    {% set productSalesChannelWidget %}
        {{ dataGrid.renderGrid('marello-product-saleschannel-grid', {'channels': marello_sales_get_saleschannel_ids(entity)}) }}
    {% endset %}

    {% if marello_entity_has_attribute(entity, 'suppliers') %}
        {% set productSupplierWidget %}
            {{ dataGrid.renderGrid('marello-product-suppliers-grid', {'suppliers': marello_supplier_get_supplier_ids(entity)}) }}
        {% endset %}
    {% endif %}

    {% if marello_entity_has_attribute(entity, 'categories') %}
        {% set productCategoriesWidget %}
            {{ dataGrid.renderGrid('marello-product-categories-grid', {'categories': marello_product_get_categories_ids(entity)}) }}
        {% endset %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge([{
        'title' : 'marello.pricing.header.label'|trans,
        'subblocks': [{
            'title' : null,
            'useSpan': false,
            'data' : [
                productChannelPriceWidget
            ]
        }]
    }]) %}

    {% set dataBlocks = dataBlocks|merge([{
        'title' : 'marello.tax.taxcode.entity_plural_label'|trans,
        'subblocks': [{
            'title' : null,
            'useSpan': false,
            'data' : [
                productTaxes
            ]
        }]
    }]) %}

    {% if entity.variant %}
        {% set productVariantWidget %}
            {{ dataGrid.renderGrid('marello-product-variant-grid', { variantId: entity.variant.id, productId: entity.id }, { cssClass: 'inner-grid' }) }}
        {% endset %}
        {% set dataBlocks = dataBlocks|merge([{
            'title' : 'marello.product.variant.entity_plural_label'|trans,
            'subblocks': [{
                'title' : null,
                'useSpan': false,
                'data' : [productVariantWidget]
            }]
        }]) %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge([{
        'title' : 'marello.sales.saleschannel.entity_plural_label'|trans,
        'subblocks': [{
            'title' : null,
            'useSpan': false,
            'data' : [
                productSalesChannelWidget
            ]
        }]
    }]) %}

    {% if marello_entity_has_attribute(entity, 'suppliers') %}
        {% set dataBlocks = dataBlocks|merge([{
            'title' : 'marello.supplier.entity_plural_label'|trans,
            'subblocks': [{
                'title' : null,
                'useSpan': false,
                'data' : [
                    productSupplierWidget
                ]
            }]
        }]) %}
    {% endif %}

    {% if marello_entity_has_attribute(entity, 'categories') %}
        {% set dataBlocks = dataBlocks|merge([{
            'title' : 'marello.catalog.category.entity_plural_label'|trans,
            'subblocks': [{
                'title' : null,
                'useSpan': false,
                'data' : [
                    productCategoriesWidget
                ]
            }]
        }]) %}
    {% endif %}

    {% set additionalData %}
        {{ entityConfig.renderDynamicFields(entity) }}
    {% endset %}

    {% set dataBlocks = dataBlocks|merge([{
        'title' : 'marello.product.sections.additional'|trans,
        'subblocks': [{
            'title' : null,
            'useSpan': false,
            'data' : [
                additionalData
            ]
        }]
    }]) %}

    {%- set additionalInfoPlaceholders = marello_get_additional_placeholder_data('product') -%}
    {% for additionalInfo in additionalInfoPlaceholders %}
        {% set productAdditionalInfoSection %}
            {% set placeholderName = additionalInfo.placeholder %}
            {% placeholder placeholderName with {'product': entity} %}
        {% endset %}
        {% if productAdditionalInfoSection|trim is not empty %}
            {% set dataBlocks = dataBlocks|merge([
                {
                    'title': additionalInfo.label|trans,
                    'class': 'active',
                    'subblocks': [
                        { 'data': [productAdditionalInfoSection] }
                    ]
                }
            ]) %}
        {% endif %}
    {% endfor %}

    {% set data = {
        'dataBlocks': dataBlocks,
    } %}

    {{ parent() }}
{% endblock %}
