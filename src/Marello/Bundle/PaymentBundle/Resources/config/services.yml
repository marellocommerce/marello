imports:
    - { resource: controllers.yml }

parameters:
    marello_payment.rule_grid_route_name: 'marello_payment_methods_configs_rule_index'
    marello_payment.rule_grid_name: 'marello-payment-methods-configs-rule-grid'

services:
    marello_payment.disable_integration_listener:
        class: 'Marello\Bundle\PaymentBundle\Method\EventListener\PaymentMethodDisableIntegrationListener'
        abstract: true

    marello_payment.remove_integration_listener:
        class: 'Marello\Bundle\PaymentBundle\Method\EventListener\IntegrationRemovalListener'
        abstract: true

    marello_payment.admin_view.method_template.listener:
        class: 'Marello\Bundle\PaymentBundle\EventListener\PaymentRuleViewMethodTemplateListener'
        abstract: true

    marello_payment.form.handler.payment_methods_configs_rule:
        class: 'Marello\Bundle\PaymentBundle\Form\Handler\PaymentMethodsConfigsRuleHandler'
        public: true
        arguments:
            - '@request_stack'
            - '@doctrine.orm.entity_manager'

    marello_payment.form.type.payment_create:
        class: 'Marello\Bundle\PaymentBundle\Form\Type\PaymentCreateType'
        arguments:
            - '@doctrine'
            - '@marello_payment.provider.basic_payment_methods_choices'
        tags:
            - { name: form.type }

    marello_payment.form.payment_create:
        class: 'Symfony\Component\Form\Form'
        factory: ['@form.factory', 'create']
        arguments:
            - 'Marello\Bundle\PaymentBundle\Form\Type\PaymentCreateType'

    marello_payment.form.handler.payment_create:
        class: 'Marello\Bundle\PaymentBundle\Form\Handler\PaymentCreateHandler'
        public: true
        arguments:
            - '@marello_payment.form.payment_create'
            - '@request_stack'
            - '@doctrine.orm.entity_manager'

    marello_payment.form.type.payment_update:
        class: 'Marello\Bundle\PaymentBundle\Form\Type\PaymentUpdateType'
        arguments:
            - '@doctrine'
        tags:
            - { name: form.type }

    marello_payment.form.payment_update:
        class: 'Symfony\Component\Form\Form'
        factory: ['@form.factory', 'create']
        arguments:
            - 'Marello\Bundle\PaymentBundle\Form\Type\PaymentUpdateType'

    marello_payment.form.handler.payment_update:
        class: 'Marello\Bundle\PaymentBundle\Form\Handler\PaymentUpdateHandler'
        public: true
        arguments:
            - '@marello_payment.form.payment_update'
            - '@request_stack'
            - '@doctrine.orm.entity_manager'

    marello_payment.datagrid.payment_rule_actions_visibility_provider:
        parent: marello_rule.action.visibility_provider
        public: true

    marello_payment.method.provider.method_provider:
        class: 'Marello\Bundle\PaymentBundle\Method\Provider\PaymentMethodProvider'
        arguments:
            - '@marello_payment.payment_method.composite_provider'
            - '@marello_payment.provider.methods_configs_rules.by_context.basic'

    marello_payment.methods_provider.cache:
        class: Doctrine\Common\Cache\ArrayCache
        public: false
        calls:
            - [ setNamespace, [ 'payment_methods_provider_cache' ] ]

    marello_payment.payment_method.composite_provider:
        class: 'Marello\Bundle\PaymentBundle\Method\Provider\CompositePaymentMethodProvider'
        public: true
        calls:
            - ['setLogger', ['@logger']]

    marello_payment.context.doctrine_line_item_collection_factory:
        class: 'Marello\Bundle\PaymentBundle\Context\LineItem\Collection\Doctrine\Factory\DoctrinePaymentLineItemCollectionFactory'

    marello_payment.context.builder_factory_basic:
        class: 'Marello\Bundle\PaymentBundle\Context\Builder\Basic\Factory\BasicPaymentContextBuilderFactory'
        arguments:
            - '@marello_payment.context.doctrine_line_item_collection_factory'

    marello_payment.line_item.builder_factory_basic:
        class: 'Marello\Bundle\PaymentBundle\Context\LineItem\Builder\Basic\Factory\BasicPaymentLineItemBuilderFactory'

    marello_payment.context.rules_converter_basic:
        class: 'Marello\Bundle\PaymentBundle\Context\Converter\Basic\BasicPaymentContextToRulesValueConverter'
        arguments:
            - '@marello_payment.expression_language.decorated_product_line_item_factory'

    Marello\Bundle\PaymentBundle\Entity\Repository\PaymentMethodsConfigsRuleRepository:
        parent: oro_entity.abstract_repository
        arguments:
            - 'Marello\Bundle\PaymentBundle\Entity\PaymentMethodsConfigsRule'
        tags:
            - { name: doctrine.repository_service }

    Marello\Bundle\PaymentBundle\Entity\Repository\PaymentMethodConfigRepository:
        parent: oro_entity.abstract_repository
        arguments:
            - 'Marello\Bundle\PaymentBundle\Entity\PaymentMethodConfig'
        tags:
            - { name: doctrine.repository_service }

    marello_payment.expression_language.decorated_product_line_item_factory:
        class: 'Marello\Bundle\PaymentBundle\ExpressionLanguage\DecoratedProductLineItemFactory'
        arguments:
            - '@marello_product.virtual_fields.decorator_factory'

    marello_payment.method.event_listener.method_removal:
        class: 'Marello\Bundle\PaymentBundle\Method\EventListener\MethodRemovalListener'
        arguments:
            - '@oro_entity.doctrine_helper'
            - '@logger'
        tags:
            - { name: kernel.event_listener, event: marello_payment.method_removal, method: onMethodRemove }

    marello_payment.method.event_listener.method_renaming:
        class: 'Marello\Bundle\PaymentBundle\Method\EventListener\MethodRenamingListener'
        arguments:
            - '@Marello\Bundle\PaymentBundle\Entity\Repository\PaymentMethodConfigRepository'
        tags:
            - { name: kernel.event_listener, event: marello_payment.method_renaming, method: onMethodRename}

    marello_orderpayment.event_listener.payment_creation:
        class: 'Marello\Bundle\PaymentBundle\EventListener\PaymentCreationListener'
        arguments:
            - '@oro_entity.doctrine_helper'
        tags:
            - { name: kernel.event_listener, event: extendable_action.order_paid, method: onOrderPaid }

    marello_payment.method.event.dispatcher.method_removal:
        class: 'Marello\Bundle\PaymentBundle\Method\Event\BasicMethodRemovalEventDispatcher'
        public: false
        arguments:
            - '@event_dispatcher'

    marello_payment.method.event.dispatcher.method_renaming:
        class: 'Marello\Bundle\PaymentBundle\Method\Event\BasicMethodRenamingEventDispatcher'
        public: true
        arguments:
            - '@event_dispatcher'

    marello_payment.context.factory.composite_supports_entity:
        class: 'Marello\Bundle\PaymentBundle\Context\Factory\CompositeSupportsEntityPaymentContextFactory'
        arguments:
            - []
        public: false
        lazy: true

    marello_payment.rule_filtration.basic_service:
        class: 'Marello\Bundle\PaymentBundle\RuleFiltration\Basic\BasicMethodsConfigsRulesFiltrationService'
        arguments:
            - '@marello_rule.rule_filtration.service'
            - '@marello_payment.context.rules_converter_basic'

    marello_payment.provider.methods_configs_rules.by_context.basic:
        class: 'Marello\Bundle\PaymentBundle\Provider\MethodsConfigsRule\Context\Basic\BasicMethodsConfigsRulesByContextProvider'
        public: false
        arguments:
            - '@marello_payment.rule_filtration.basic_service'
            - '@Marello\Bundle\PaymentBundle\Entity\Repository\PaymentMethodsConfigsRuleRepository'
            - '@oro_security.acl_helper'

    marello_payment.enabled_rule_filtration.basic_service:
        class: 'Marello\Bundle\PaymentBundle\RuleFiltration\Basic\BasicMethodsConfigsRulesFiltrationService'
        arguments:
            - '@marello_rule.rule_filtration.service'
            - '@marello_payment.context.rules_converter_basic'

    marello_payment.provider.methods_configs_rules.by_context_required_parameters:
        class: 'Marello\Bundle\PaymentBundle\Provider\MethodsConfigsRule\Context\RegardlessDestination\RegardlessDestinationMethodsConfigsRulesByContextProvider'
        public: false
        arguments:
            - '@marello_payment.enabled_rule_filtration.basic_service'
            - '@Marello\Bundle\PaymentBundle\Entity\Repository\PaymentMethodsConfigsRuleRepository'
            - '@oro_security.acl_helper'

    marello_payment.provider.basic_payment_methods_choices:
        class: 'Marello\Bundle\PaymentBundle\Provider\BasicPaymentMethodChoicesProvider'
        arguments:
        - '@marello_payment.payment_method.composite_provider'
        - '@translator'

    marello_payment.payment_methods_choices_provider.enabled_methods_decorator:
         class: 'Marello\Bundle\PaymentBundle\Provider\EnabledPaymentMethodChoicesProviderDecorator'
         public: false
         decorates: marello_payment.provider.basic_payment_methods_choices
         decoration_priority: 255
         arguments:
             - '@marello_payment.payment_method.composite_provider'
             - '@marello_payment.payment_methods_choices_provider.enabled_methods_decorator.inner'

    marello_payment.checker.payment_method_enabled:
        class: 'Marello\Bundle\PaymentBundle\Checker\PaymentMethodEnabledByIdentifierChecker'
        arguments:
            - '@marello_payment.payment_method.composite_provider'

    marello_payment.checker.payment_rule_enabled:
        class: 'Marello\Bundle\PaymentBundle\Checker\PaymentRuleEnabledChecker'
        arguments:
            - '@marello_payment.checker.payment_method_enabled'

    marello_payment.formatter.payment_method_label:
        class: 'Marello\Bundle\PaymentBundle\Formatter\PaymentMethodLabelFormatter'
        arguments:
            - "@marello_payment.payment_method.composite_provider"

    marello_payment.twig.payment_method_extension:
        class: 'Marello\Bundle\PaymentBundle\Twig\PaymentMethodExtension'
        public: false
        arguments:
            - "@marello_payment.formatter.payment_method_label"
            - '@event_dispatcher'
            - '@marello_payment.checker.payment_method_enabled'
        tags:
            - { name: twig.extension }

    marello_payment.method_disable_handler.basic:
        class: 'Marello\Bundle\PaymentBundle\Method\Handler\BasicPaymentMethodDisableHandler'
        public: false

    marello_payment.method_disable_handler.decorator:
        class: 'Marello\Bundle\PaymentBundle\Method\Handler\RulesPaymentMethodDisableHandlerDecorator'
        decorates: marello_payment.method_disable_handler.basic
        decoration_priority: 255
        public: false
        arguments:
            - '@marello_payment.method_disable_handler.decorator.inner'
            - '@Marello\Bundle\PaymentBundle\Entity\Repository\PaymentMethodsConfigsRuleRepository'
            - '@marello_payment.payment_method.composite_provider'
            - '@oro_security.acl_helper'

    marello_payment.action.handler.add_payment:
        class: 'Marello\Bundle\PaymentBundle\Action\Handler\AddPaymentActionHandler'
        public: true
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@marello_invoice.provider.invoice_paid_amount'
        calls:
            - [setDoctrineHelper, ['@oro_entity.doctrine_helper']]

    marello_payment.action.handler.payment_methods_configs_rule.enable_status:
        class: 'Marello\Bundle\PaymentBundle\Action\Handler\PaymentMethodsConfigsRuleToggleStatusActionHandler'
        public: true
        arguments:
            - '@doctrine.orm.entity_manager'
            - true

    marello_payment.action.handler.payment_methods_configs_rule.disable_status:
        class: 'Marello\Bundle\PaymentBundle\Action\Handler\PaymentMethodsConfigsRuleToggleStatusActionHandler'
        public: true
        arguments:
            - '@doctrine.orm.entity_manager'
            - false

    marello_payment.provider.payment_methods_views:
        class: 'Marello\Bundle\PaymentBundle\Provider\BasicPaymentMethodsViewsProvider'
        arguments:
            - '@marello_payment.provider.methods_configs_rules.by_context.basic'
            - '@marello_payment.payment_method.composite_provider'
            - '@event_dispatcher'

    marello_payment.condition.has_applicable_payment_methods:
        class: 'Marello\Bundle\PaymentBundle\Condition\HasApplicablePaymentMethods'
        arguments:
            - '@marello_payment.payment_method.composite_provider'
            - '@marello_payment.provider.payment_methods_views'
        tags:
            - { name: oro_workflow.condition, alias: 'marello_has_applicable_payment_methods' }
            - { name: oro_action.condition, alias: 'marello_has_applicable_payment_methods' }

    marello_payment.condition.payment_method_has_payment_rules:
        class: 'Marello\Bundle\PaymentBundle\Condition\PaymentMethodHasPaymentRules'
        arguments:
            - '@Marello\Bundle\PaymentBundle\Entity\Repository\PaymentMethodsConfigsRuleRepository'
            - '@oro_security.acl_helper'
        tags:
            - { name: oro_workflow.condition, alias: 'marello_payment_method_has_payment_rules' }
            - { name: oro_action.condition, alias: 'marello_payment_method_has_payment_rules' }

    marello_payment.condition.payment_method_has_enabled_payment_rules:
        class: 'Marello\Bundle\PaymentBundle\Condition\PaymentMethodHasEnabledPaymentRules'
        arguments:
            - '@Marello\Bundle\PaymentBundle\Entity\Repository\PaymentMethodsConfigsRuleRepository'
            - '@oro_security.acl_helper'
        tags:
            - { name: oro_workflow.condition, alias: 'marello_payment_method_has_enabled_payment_rules' }
            - { name: oro_action.condition, alias: 'marello_payment_method_has_enabled_payment_rules' }

    marello_payment.helper.filtered_datagrid_route:
        class: 'Marello\Bundle\ShippingBundle\Tools\FilteredDatagridRouteHelper'
        public: true
        arguments:
            - '%marello_payment.rule_grid_route_name%'
            - '%marello_payment.rule_grid_name%'
            - '@oro_datagrid.helper.route'

    marello_payment.provider.form_changes.available_currencies:
        class: 'Marello\Bundle\PaymentBundle\Provider\FormChanges\AvailableCurrenciesFormChangesProvider'
        arguments:
            - '@oro_locale.settings'
            - '@oro_currency.config.currency'
        tags:
            - { name: marello.form_changes_data_provider, class: 'Marello\Bundle\PaymentBundle\Entity\Payment', type: currencies, priority: 45 }

    marello_payment.provider.form_changes.available_payment_methods:
        class: 'Marello\Bundle\PaymentBundle\Provider\FormChanges\AvailablePaymentMethodsFormChangesProvider'
        arguments:
            - '@twig'
            - '@form.factory'
            - '@marello_payment.provider.basic_payment_methods_choices'
        tags:
            - { name: marello.form_changes_data_provider, class: 'Marello\Bundle\PaymentBundle\Entity\Payment', type: paymentMethods, priority: 45 }

    marello_payment.validator.payment_status:
        class: 'Marello\Bundle\PaymentBundle\Validator\PaymentStatusValidator'
        tags:
            - { name: validator.constraint_validator, alias: marello_payment.payment_status_validator }

    marello_payment.validator.total_paid:
        class: 'Marello\Bundle\PaymentBundle\Validator\TotalPaidValidator'
        tags:
            - { name: validator.constraint_validator, alias: marello_payment.total_paid_validator }
