{% extends '@OroUI/actions/view.html.twig' %}
{% import '@OroUI/macros.html.twig' as UI %}
{% import '@OroAddress/macros.html.twig' as address %}
{% import '@OroEntityConfig/macros.html.twig' as entityConfig %}

{% if entity.id %}
    {% oro_title_set({params : {"%warehouse.label%": entity.label|default('N/A'|trans) } }) %}
{% endif %}

{% block pageHeader %}
    {% set breadcrumbs = {
    'entity': entity,
    'indexPath': path('marelloenterprise_inventory_warehouse_index'),
    'indexLabel': 'marello.inventory.warehouse.entity_label'|trans,
    'entityTitle': entity.label|default('N/A'|trans)
    } %}
    {{ parent() }}
{% endblock pageHeader %}

{% block navButtons %}
    {% if entity.id %}
        {% if not entity.default and is_granted('DELETE', entity) %}
            {{ parent() }}
        {% endif %}
        {% if is_granted('marelloenterprise_inventory_warehouse_update') or is_granted('marelloenterprise_inventory_warehouse_create') %}
            {{ UI.editButton({
                'path' : path('marelloenterprise_inventory_warehouse_update', { id: entity.id }),
                'entity_label': 'marello.inventory.warehouse.entity_label'|trans
            }) }}
        {% endif %}
    {% endif %}
{% endblock %}

{% block content_data %}
    {% set id = 'marello-warehouse-view' %}

    {%- set warehouseInformation -%}
        <div class="row-fluid form-horizontal">
            <div class="responsive-block">
                {{ UI.renderProperty('marello.inventory.warehouse.label.label'|trans, entity.label) }}
                {{ UI.renderProperty('marello.inventory.warehouse.code.label'|trans, entity.code) }}
                {{ UI.renderProperty('marello.inventory.warehouse.default.label'|trans, entity.default ?
                'marello.core.yes.label'|trans
                :
                'marello.core.no.label'|trans
                ) }}
                {{ UI.renderProperty('marello.inventory.warehouse.warehouse_type.label'|trans, entity.warehouseType) }}
                {{ UI.renderHtmlProperty('marello.inventory.warehouse.address.label'|trans, address.renderAddress(entity.address)) }}
                {{ UI.renderProperty('marello.address.marelloaddress.phone.label'|trans, entity.address.phone) }}
                {{ UI.renderProperty('marello.inventory.warehouse.email.label'|trans, entity.email) }}
            </div>
        </div>
    {%- endset -%}

    {% set dataBlocks = [
        {
            'title': 'oro.entity_config.block_titles.general.label'|trans,
            'class': 'active',
            'subblocks': [
                {'data' : [warehouseInformation]},
            ]
        }
    ] %}

    {% set additionalData %}
        {{ entityConfig.renderDynamicFields(entity) }}
        {{ UI.renderHtmlProperty(
            'marello.inventory.warehouse.order_on_demand_location.label'|trans,
            entity.orderOnDemandLocation ?
            'marello.core.yes.label'|trans
            :
            'marello.core.no.label'|trans
        ) }}
    {% endset %}

    {% set dataBlocks = dataBlocks|merge([{
        'title' : 'marelloenterprise.inventory.warehouse.datablock.additional'|trans,
        'subblocks': [{
            'title' : null,
            'useSpan': false,
            'data' : [
                additionalData
            ]
        }]
    }]) %}

    {%- set additionalInfoPlaceholders = marello_get_additional_placeholder_data('warehouse') -%}
    {% for additionalInfo in additionalInfoPlaceholders %}
        {% set warehouseAdditionalInfoSection %}
            {% set placeholderName = additionalInfo.placeholder %}
            {% placeholder placeholderName with {'warehouse': entity} %}
        {% endset %}
        {% if warehouseAdditionalInfoSection|trim is not empty %}
            {% set dataBlocks = dataBlocks|merge([
                {
                    'title': additionalInfo.label|trans,
                    'class': 'active',
                    'subblocks': [
                        { 'data': [warehouseAdditionalInfoSection] }
                    ]
                }
            ]) %}
        {% endif %}
    {% endfor %}

    {% set data = {'dataBlocks': dataBlocks} %}
    {{ parent() }}
{% endblock content_data %}

{% block stats %}
    {# Must be empty, because parent view uses this block to render dates, which are not implemented in this entity #}
{% endblock stats %}
